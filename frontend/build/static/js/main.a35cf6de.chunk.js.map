{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","components/InfoTooltip.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","path","to","email","onClick","onLogout","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardClick","name","link","style","backgroundImage","onCardDelete","type","aria-label","onCardLike","Main","avatar","alt","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","length","Footer","PopupWithForm","isOpen","id","onSubmit","noValidate","onClose","title","children","buttonText","ImagePopup","src","api","address","token","format","this","_address","_token","_format","fetch","headers","authorization","then","_checkResponse","method","body","JSON","stringify","data","cardId","addLike","removeLike","res","ok","json","Promise","reject","status","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","value","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","onUpdateCards","Register","setEmail","password","setPassword","evt","onRegister","Login","onLogin","ProtectedRoute","Component","component","loggedIn","InfoTooltip","isSuccess","BASE_URL","checkResponse","App","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isInfoTooltipOpen","setisInfoTooltipOpen","isConfirmPopupOpen","setisConfirmPopupOpen","setloggedIn","userEmail","setUserEmail","isAuthSuccess","setIsAuthSuccess","selectedCard","setSelectedCard","setCards","setCurrentUser","cardForDelete","setCardForDelete","history","useHistory","handleInfoTooltip","closeAllPopups","handleAuthSuccess","item","getUser","results","catch","err","console","log","getInitialCards","jwt","localStorage","getItem","result","push","Provider","removeItem","exact","changeLikeCardStatus","newCard","state","c","auth","setItem","editUser","editAvatar","addCard","deleteCard","newCards","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a35cf6de.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\" />\r\n        <div className=\"header__menu\">\r\n          \r\n          <Switch>\r\n            <Route path=\"/sign-up\">\r\n              <Link to=\"./sign-in\" className=\"header__auth\" >\r\n                Войти\r\n              </Link>\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              <Link to=\"./sign-up\" className=\"header__auth\" >\r\n                Регистрация\r\n              </Link>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <p className=\"header__email\">{props.email}</p>\r\n              <button className=\"header__auth\" onClick={props.onLogout}>\r\n                Выйти\r\n              </button>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n      `photo__delete-icon ${isOwn ? '' : 'photo__delete-icon_hidden'}`\r\n    ); \r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (\r\n      `photo__card-like ${isLiked ? 'photo__card-like_active' : 'photo__card-like'}`\r\n    ); ; \r\n\r\n     function handleClick() {\r\n        props.onCardClick(props.name, props.link);\r\n      } \r\n      function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n      } \r\n      function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n      } \r\n\r\n      \r\n  return (\r\n    <li   className=\"photo__card\">\r\n    <div onClick={handleClick} className=\"photo__card-place\" style={{ backgroundImage: `url(${props.link})` }}/>\r\n    <button className={cardDeleteButtonClassName} onClick={handleDeleteClick} type=\"reset\" aria-label=\"Удалить фото\" />\r\n    <div className=\"photo__flex\">\r\n      <h2 className=\"photo__card-discprition\">{props.name}</h2>\r\n      <div className=\"photo__like-container\">\r\n        <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" aria-label=\"Поставить лайк\" />\r\n        <p className=\"photo__like-counter\" >{props.likes}</p>\r\n      </div>\r\n    </div>\r\n  </li>\r\n);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n      \r\n  return (\r\n    <main className=\"content\">\r\n    <section className=\"profile\">\r\n      <div className=\"profile__flex\">\r\n        <div className=\"profile__container-avatar\">\r\n          <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }}  alt=\"Аватарка\" />\r\n          <button onClick={props.onEditAvatar} className=\"profile__avatar-update\" type=\"button\" aria-label=\"Редактировать аватар\" />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__edit\">\r\n            <h1 className=\"profile__edit-author\">{currentUser.name}</h1>\r\n            <button onClick={props.onEditProfile} className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактирование профиля\" />\r\n          </div>\r\n          <h2 className=\"profile__profession\">{currentUser.about}</h2>\r\n        </div>\r\n      </div>    \r\n      <button onClick={props.onAddPlace} className=\"profile__button\" type=\"button\" aria-label=\"Добавить фотографии\" />\r\n    </section>\r\n    <section className=\"photo\">\r\n      <ul className=\"photo__grid\">\r\n        {props.cards.map((card)=>\r\n          (<Card\r\n              key={card._id}\r\n              link={card.link} \r\n              name={card.name} \r\n              likes={card.likes.length}\r\n              card={card}\r\n              onCardClick={props.onCardClick} \r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n          />)\r\n        )}\r\n      </ul>\r\n    </section>\r\n\r\n  </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__mesto\">© 2021 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={props.isOpen ? 'popup popup_opened' : 'popup'} id={props.name}> \r\n      <form className={props.className}  name={props.name} onSubmit={props.onSubmit} noValidate>\r\n        <button onClick={props.onClose} className=\"popup__close-button\" type=\"reset\" aria-label=\"Закрыть окно редактирования\" />\r\n        <h3 className=\"popup__header\">{props.title}</h3>\r\n        {props.children}\r\n        <button className=\"popup__button\" type=\"submit\" aria-label={props.buttonText} >{props.buttonText}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={props.isOpen ? 'popup popup_opened' : 'popup'} id=\"popup-image\">\r\n      <div className=\"popup__block\">\r\n        <button onClick={props.onClose} className=\"popup__close-button\" type=\"reset\" aria-label=\"Закрыть фотографию\" />\r\n        <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n        <p className=\"popup__description\">{props.card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;"," class Api {\r\n    constructor({address, token, format}) {\r\n        this._address = address;\r\n        this._token = token;\r\n        this._format = format;\r\n    }\r\n\r\n    //Загрузка информации о пользователе с сервера\r\n    getUser(){\r\n        return fetch(`${this._address}/users/me`, {\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': this._format\r\n            }\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n\r\n    //Загрузка карточек с сервера\r\n    getInitialCards() {\r\n        return fetch(`${this._address}/cards`, {\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': this._format\r\n            }\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n\r\n    //Редактирование профиля\r\n    editUser({ name, about }){\r\n        return fetch(`${this._address}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': this._format\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                about\r\n            })\r\n    })\r\n    .then(this._checkResponse)\r\n\r\n    }\r\n\r\n    //Редактирование аватара\r\n    editAvatar({avatar}){\r\n        return fetch(`${this._address}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': this._format\r\n            },\r\n            body: JSON.stringify({\r\n                avatar\r\n            })\r\n    })\r\n    .then(this._checkResponse)\r\n\r\n    }\r\n\r\n    //Добавление новой карточки\r\n    addCard({ name, link }){\r\n        return fetch(`${this._address}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': this._format\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                link\r\n            })\r\n    })\r\n    .then(this._checkResponse)\r\n}\r\n\r\n    //Удаление карточки\r\n    deleteCard(data){\r\n        return fetch(`${this._address}/cards/${data._id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    authorization: this._token,\r\n                    'Content-Type': this._format\r\n                },\r\n        })\r\n        .then(this._checkResponse)\r\n        \r\n    }\r\n\r\n    //Добавление лайка\r\n    addLike(id){\r\n        return fetch(`${this._address}/cards/likes/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    authorization: this._token,\r\n                    'Content-Type': this._format\r\n                },\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n\r\n    //Удаление лайка\r\n    removeLike(id){\r\n        return fetch(`${this._address}/cards/likes/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    authorization: this._token,\r\n                    'Content-Type': this._format\r\n                },\r\n        })\r\n        .then(this._checkResponse)\r\n    }  \r\n\r\n    //Добавление и удаление лайков\r\n    changeLikeCardStatus(cardId, isLiked){\r\n        if(isLiked){\r\n            return this.addLike(cardId)\r\n        }\r\n        else{\r\n             return this.removeLike(cardId)   \r\n        }\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    address: 'https://mesto.nomoreparties.co/v1/cohort-22',\r\n    token: 'fd83089e-563a-4f6d-a7ca-57bbc8360c89',\r\n    format: 'application/json'\r\n  }); \r\n\r\n  export default api;\r\n\r\n    \r\n \r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    // Подписка на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n    }\r\n    \r\n    return (\r\n      <PopupWithForm \r\n        name=\"popup-author\" \r\n        title=\"Редактировать профиль\"\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n        buttonText='Сохранить'\r\n        className=\"popup__container\"\r\n        >\r\n            <input value={name||''} \r\n            onChange={handleChangeName} \r\n            id=\"popup__name-author\" \r\n            className=\"popup__input\" \r\n            type=\"text\" \r\n            placeholder=\"Имя\" \r\n            name=\"author\" \r\n            minLength={2} \r\n            maxLength={40} \r\n            required \r\n            />\r\n            <span className=\"popup__name-author-error popup__error\" />\r\n            <input \r\n            value={description||''} \r\n            onChange={handleChangeDescription} \r\n            id=\"popup__link-author\" \r\n            className=\"popup__input\" \r\n            type=\"text\" \r\n            placeholder=\"О себе\" \r\n            name=\"description\" \r\n            minLength={2} \r\n            maxLength={200} \r\n            required \r\n            />\r\n            <span className=\"popup__link-author-error popup__error\" />\r\n      </PopupWithForm>\r\n\r\n    );\r\n  }\r\n  \r\n  export default EditProfilePopup;\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateAvatar({\r\n          avatar: avatarRef.current.value,\r\n        });\r\n    }\r\n\r\n    \r\n    return (\r\n        <PopupWithForm \r\n        name=\"popup-update-avatar\" \r\n        title=\"Обновить аватар\"\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n        buttonText='Сохранить'\r\n        className=\"popup__container popup__container_avatar\"\r\n      >\r\n          <input \r\n          ref={avatarRef} \r\n          id=\"popup__link-avatar\" \r\n          className=\"popup__input\" \r\n          type=\"url\" \r\n          placeholder=\"Ссылка\" \r\n          name=\"avatar\" required \r\n          />\r\n          <span className=\"popup__link-avatar-error popup__error\" />\r\n      </PopupWithForm>\r\n\r\n    );\r\n  }\r\n  \r\n  export default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [name, setName] = useState('');\r\n    const [link, setLink] = useState('');\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n    function handleChangeLink(e) {\r\n        setLink(e.target.value);\r\n    }\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateCards({\r\n        name,\r\n        link,\r\n        });\r\n        setName('');\r\n        setLink('');\r\n    }\r\n    \r\n    return (\r\n        <PopupWithForm \r\n        name=\"popup-addimage\" \r\n        title=\"Новое место\"\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        onSubmit={handleSubmit}\r\n        buttonText='Создать'\r\n        className=\"popup__container\"\r\n      >\r\n          <input \r\n          value={name}\r\n          onChange={handleChangeName}\r\n          id=\"popup__name\" \r\n          className=\"popup__input\" \r\n          type=\"text\" \r\n          placeholder=\"Название\" \r\n          name=\"name\" \r\n          minLength={2} \r\n          maxLength={30} \r\n          required \r\n          />\r\n          <span className=\"popup__name-error popup__error\" />\r\n          <input\r\n          value={link}\r\n          onChange={handleChangeLink} \r\n          id=\"popup__link\" \r\n          className=\"popup__input\" \r\n          type=\"url\" \r\n          placeholder=\"Ссылка\" \r\n          name=\"link\" \r\n          required \r\n          />\r\n          <span className=\"popup__link-error popup__error\" />\r\n      </PopupWithForm>\r\n\r\n    );\r\n  }\r\n  \r\n  export default AddPlacePopup;\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Register(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n  function handleChangeEmail(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleChangePassword(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onRegister(email, password);\r\n  }\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"popup__container popup__container_auth\" noValidate>\r\n            <h3 className=\"popup__header popup__header_auth\">Регистрация</h3>\r\n                <input\r\n                    value={email}\r\n                    onChange={handleChangeEmail} \r\n                    id=\"email\" \r\n                    className=\"popup__input popup__input_auth\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    name=\"email\" \r\n                    required \r\n                />\r\n                <input \r\n                    value={password}\r\n                    onChange={handleChangePassword} \r\n                    id=\"password\" \r\n                    className=\"popup__input popup__input_auth\" \r\n                    type=\"password\" \r\n                    placeholder=\"Пароль\" \r\n                    name=\"password\" \r\n                    minLength={6} \r\n                    maxLength={40} \r\n                    required \r\n                />\r\n                    <button className=\"popup__button popup__button_auth\" type=\"submit\" >Зарегестрироваться</button>\r\n                        <Link to=\"/sign-in\" className=\"popup__register-auth\">Уже зарегистрированны? Войти</Link>\r\n        </form>\r\n    );\r\n}\r\n  \r\n  export default Register;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Login(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n  function handleChangeEmail(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleChangePassword(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!email || !password) {\r\n      return;\r\n    }\r\n    props.onLogin(email, password);\r\n  }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"popup__container popup__container_auth\" noValidate>\r\n            <h3 className=\"popup__header popup__header_auth\">Вход</h3>\r\n                <input\r\n                    value={email}\r\n                    onChange={handleChangeEmail} \r\n                    id=\"email\" \r\n                    className=\"popup__input popup__input_auth\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    name=\"email\"\r\n                    required \r\n                />\r\n                <input \r\n                    value={password} \r\n                    onChange={handleChangePassword} \r\n                    id=\"password\" \r\n                    className=\"popup__input popup__input_auth\" \r\n                    type=\"password\"\r\n                    placeholder=\"Пароль\" \r\n                    name=\"password\" \r\n                    minLength={6} \r\n                    maxLength={40} \r\n                    required \r\n                />\r\n                <button className=\"popup__button popup__button_auth\" type=\"submit\" >Войти</button>\r\n        </form>\r\n    );\r\n  }\r\n  \r\n  export default Login;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;","import React from \"react\";\r\n\r\nfunction InfoTooltip(props) {\r\n  return (\r\n    <section \r\n    className={props.isOpen ? 'popup popup_opened' : 'popup'} \r\n    id=\"InfoTooltip\">\r\n      <div className=\"popup__container\">\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        />\r\n        {props.isSuccess ? (\r\n          <>\r\n            <div className=\"popup__img\" />\r\n            <h2 className=\"popup__header popup__header_info\">Вы успешно зарегистрировались!</h2>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"popup__img popup__img_fail\" />\r\n            <h2 className=\"popup__header popup__header_info\">Что-то пошло не так. Попробуйте ещё раз!</h2>\r\n          </>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nconst checkResponse =(res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n}\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password\r\n    })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password\r\n    })\r\n  })\r\n  .then(checkResponse)\r\n}; \r\n\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport * as auth from \"../utils/auth\";\r\n\r\n\r\nfunction App() {\r\n  \r\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = useState(false);\r\n  const [isInfoTooltipOpen, setisInfoTooltipOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setisConfirmPopupOpen] = useState(false);\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [isAuthSuccess, setIsAuthSuccess] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({link:'',name:'',isOpen: false});\r\n  const [cards, setCards] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cardForDelete, setCardForDelete] = useState();\r\n  const history = useHistory();\r\n  \r\n  function handleEditAvatarClick() {\r\n    setisEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setisAddPlacePopupOpen(true);\r\n  }\r\n  function handleInfoTooltip() {\r\n    setisInfoTooltipOpen(true);\r\n  }\r\n  function handleConfirm(card) {\r\n    setCardForDelete(card);\r\n    setisConfirmPopupOpen(true);\r\n  }\r\n\r\n   function handleCardClick(name,link) {\r\n    setSelectedCard({\r\n      name: name,\r\n      link: link,\r\n      isOpen: true\r\n    });\r\n   }\r\n\r\n  function closeAllPopups() {\r\n    setisEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setisAddPlacePopupOpen(false);\r\n    setisInfoTooltipOpen(false);\r\n    setSelectedCard({link:'',name:'',isOpen: false});\r\n    setisConfirmPopupOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.getUser()\r\n    .then((results) => {\r\n      setCurrentUser(\r\n        {\r\n          _id: results._id,\r\n          name: results.name,\r\n          about: results.about,\r\n          avatar: results.avatar\r\n      })\r\n    })\r\n    .catch((err) => console.log(`Ошибка: ${err}`));\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    api.getInitialCards()\r\n    .then((results) => {\r\n      setCards(results)\r\n    })\r\n    .catch((err) => console.log(`Ошибка: ${err}`));\r\n  },[])\r\n      \r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n    .then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n    })\r\n    .catch((err) => console.log(`Ошибка: ${err}`));  \r\n  }\r\n\r\n  function handleCardDelete (evt){\r\n    evt.preventDefault();\r\n    api.deleteCard(cardForDelete)\r\n        .then(() => {\r\n          const newCards = cards.filter((c) => c._id !== cardForDelete._id);\r\n          setisConfirmPopupOpen(false);\r\n          setCards(newCards);\r\n        })\r\n        .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }\r\n\r\n  function handleUpdateUser(currentUser) {\r\n    api.editUser(currentUser)\r\n      .then((results) =>{\r\n        setCurrentUser(results);\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n\r\n  }\r\n\r\n  function handleUpdateAvatar(currentUser) {\r\n    api.editAvatar(currentUser)\r\n      .then((results) =>{\r\n        setCurrentUser(results);\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }\r\n\r\n  function handleUpdateCards(currentUser) {\r\n    api.addCard(currentUser)\r\n      .then((results) =>{\r\n        setCards([results, ...cards]);;\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n  }\r\n\r\n  function handleAuthSuccess(item) {\r\n    setIsAuthSuccess(item);\r\n  }\r\n\r\n  function handleRegister(email, password) {\r\n    auth.register(email, password)\r\n       .then((result) => {\r\n        if (result) {\r\n          handleAuthSuccess(true);\r\n          handleInfoTooltip();\r\n          history.push(\"/sign-in\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`);\r\n        handleAuthSuccess(false);\r\n        handleInfoTooltip();\r\n      });\r\n  };\r\n\r\n  function handleLogin(email, password) {\r\n    auth.authorize(email, password)\r\n       .then((result) => {\r\n        if (result.token) {\r\n          localStorage.setItem(\"jwt\", result.token);\r\n          setUserEmail({\r\n            email: email,\r\n          });\r\n          setloggedIn(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`);\r\n        handleAuthSuccess(false);\r\n        handleInfoTooltip();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    if (jwt) {\r\n      auth.getContent(jwt)\r\n        .then((result) => {\r\n           setUserEmail({\r\n               email: result.data.email\r\n           })\r\n            setloggedIn(true);\r\n            history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Ошибка: ${err}`);\r\n        });\r\n    }\r\n  }, [history]);\r\n\r\n  function handleLogOut () {\r\n    localStorage.removeItem(\"jwt\");\r\n    setloggedIn(false);\r\n    setUserEmail(' ');\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n    return (\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n          <div className=\"page\">\r\n            <div className=\"page__container\">\r\n\r\n              <Header\r\n                email={userEmail.email}\r\n                onLogout={handleLogOut}\r\n              />\r\n\r\n              <Switch>\r\n                <ProtectedRoute\r\n                  exact\r\n                  path=\"/\"\r\n                  loggedIn={loggedIn}\r\n                  component={Main}\r\n                  onEditAvatar={handleEditAvatarClick} \r\n                  onEditProfile={handleEditProfileClick} \r\n                  onAddPlace={handleAddPlaceClick}\r\n                  cards={cards}\r\n                  onCardClick={handleCardClick}\r\n                  onCardLike={handleCardLike}\r\n                  onCardDelete={handleConfirm}\r\n                />\r\n                <Route path=\"/sign-in\">\r\n                  <Login\r\n                    onLogin={handleLogin} \r\n                  />\r\n                </Route>\r\n                <Route path=\"/sign-up\">\r\n                  <Register\r\n                    onRegister={handleRegister}\r\n                  />\r\n                </Route>\r\n              </Switch>\r\n\r\n              <Footer />\r\n\r\n              <EditProfilePopup \r\n                isOpen={isEditProfilePopupOpen} \r\n                onClose={closeAllPopups}\r\n                onUpdateUser={handleUpdateUser}\r\n              />\r\n\r\n              <EditAvatarPopup \r\n                isOpen={isEditAvatarPopupOpen} \r\n                onClose={closeAllPopups}\r\n                onUpdateAvatar={handleUpdateAvatar}\r\n              />\r\n\r\n              <AddPlacePopup \r\n                isOpen={isAddPlacePopupOpen} \r\n                onClose={closeAllPopups}\r\n                onUpdateCards={handleUpdateCards}\r\n              />\r\n\r\n              <PopupWithForm \r\n                isOpen={isConfirmPopupOpen}\r\n                onSubmit={handleCardDelete}\r\n                onClose={closeAllPopups}\r\n                name=\"popup-confirm\" \r\n                title=\"Вы уверены?\"\r\n                className=\"popup__container popup__confirm-container\"\r\n                buttonText='Да'\r\n              />\r\n\r\n              <ImagePopup\r\n                card={selectedCard}\r\n                isOpen={selectedCard.isOpen}\r\n                onClose={()=> closeAllPopups()} \r\n              />\r\n              <InfoTooltip\r\n                isOpen={isInfoTooltipOpen}\r\n                onClose={closeAllPopups}\r\n                isSuccess={isAuthSuccess}\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n      </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}